{
    "openapi": "3.0.0",
    "info": {
        "description": "Designed to be consumed by the POG Report Client, the endpoints are available for authorized users to consume.",
        "version": "1.0.0",
        "title": "POG Reports",
        "termsOfService": "http://ipr.bcgsc.ca/api/terms/",
        "contact": {
            "name": "Brandon Pierce",
            "email": "bpierce@bcgsc.ca"
        },
        "license": {
            "name": "Proprietary"
        }
    },
    "host": "api-ipr.bcgsc.ca:8001",
    "basePath": "/api/1.0",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [
        {
          "name": "Genomic Report",
          "description": "Genomic analysis report"
        },
        {
          "name": "Probe Report",
          "description": "Rapid analysis pipeline report"
        },
        {
            "name": "POG",
            "description": "Personalized Oncogenomics related object"
        },
        {
            "name": "User",
            "description": "User object"
        },
        {
            "name": "Group",
            "description": "User permissions - groups."
        },
        {
            "name": "Genomic Summary",
            "description": "Genomic Report - Summary details for a POG report"
        }
    ],
    "schemes": [
        "http"
    ],
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "paths": {
        "/user": {
            "get": {
                "summary": "Get all users",
                "description": "If your account has permissions, this will return all detailed user object descriptions in the database.",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "For those authorized, returns all available users in the database",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "403": {
                        "description": "Denied access to list of all users",
                        "schema": {
                            "$ref": "#/definitions/ACLDenied"
                        }
                    }
                }
            },
            "post": {
                "summary": "Authorize new account",
                "description": "Authorize a new user to access IPR",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "newUser",
                        "in": "body",
                        "description": "New user to be added to the database.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been successfully added to the system",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid input was provided"
                    },
                    "403": {
                        "description": "Insufficient access to authorize new accounts"
                    }
                }
            }
        },
        "/user/{user}": {
            "put": {
                "summary": "Update a user account",
                "description": "Update the user specified user details",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "User's UUID string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "description": "The updated user object entry to be stored in the database.",
                        "schema": {
                            "$ref": "#/definitions/NewUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User account was updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get single user",
                "description": "Return full user description from ident key.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "User's UUID string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A user account has been found and returned",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "403": {
                        "description": "Insufficient access to view user records"
                    },
                    "404": {
                        "description": "Unable to find the specified user"
                    }
                }
            },
            "delete": {
                "summary": "Remove a single user",
                "description": "Delete a user's access to the API. This does not remove the record from the dataStore the user is located in.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "User's UUID string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The user has been successfully removed"
                    },
                    "403": {
                        "description": "Insufficient access to remove the user"
                    },
                    "404": {
                        "description": "Unable to find the requested user"
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "summary": "Return self",
                "description": "Return the current authenticated user",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Returns the current authenticated self",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "403": {
                        "description": "No authenticated user available."
                    }
                }
            }
        },
        "/user/search": {
            "get": {
                "summary": "User Search",
                "description": "Provided some input query, search the user database and return results. Query is search against first name, last name, email, and username.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "description": "String to search user database against. Wildcard matching on either side of string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully searched user database against the provided query.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/user/group": {
            "get": {
                "summary": "Get all groups",
                "description": "Return all groups currently listed in the report ACL database. This is not linked or connected to the BCGSC LDAP database. Changes in one do not affect the other.",
                "tags": [
                    "Group",
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "The API will return all available groups it has on record.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    },
                    "403": {
                        "description": "You are not authorized to view this resource"
                    }
                }
            },
            "post": {
                "summary": "Create new group",
                "description": "Create a new ACL group in the POG Report API",
                "tags": [
                    "User",
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "newGroup",
                        "in": "body",
                        "required": true,
                        "description": "New group object to be created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully added to database",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "403": {
                        "description": "You are not allowed to create new group entries."
                    }
                }
            }
        },
        "/user/group/{group}": {
            "get": {
                "summary": "Get a group",
                "description": "Get detailed group object from ident.",
                "tags": [
                    "User",
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "Group UUID string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group found, API will return the detailed group object.",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to view the resource"
                    }
                }
            },
            "put": {
                "summary": "Update a group",
                "description": "Update the groups definition in the IPR API database",
                "tags": [
                    "User",
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "Group UUID string",
                        "type": "string"
                    },
                    {
                        "name": "newGroup",
                        "in": "body",
                        "required": true,
                        "description": "New group object to be created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the group.",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to perform this action"
                    },
                    "404": {
                        "description": "Unable to find the group"
                    }
                }
            },
            "delete": {
                "summary": "Remove a group",
                "description": "Remove a group entry from the database. Doing this will immediately revoke group member's access to defined resources.",
                "tags": [
                    "User",
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "Group UUID string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The group was successfully removed"
                    },
                    "403": {
                        "description": "You are not authorized to perform this action"
                    },
                    "404": {
                        "description": "Unable to find the group or user"
                    }
                }
            }
        },
        "/user/group/{group}/member": {
            "get": {
                "summary": "Get group members",
                "description": "Get detailed description of all group members.",
                "tags": [
                    "User",
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "Group UUID string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved all group members.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "403": {
                        "description": "You are not authorized to view group members"
                    },
                    "404": {
                        "description": "Unable to find the group or user"
                    }
                }
            },
            "post": {
                "summary": "Add group member",
                "description": "Add an existing user as a member to the specified group",
                "tags": [
                    "User",
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "Group UUID string",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "description": "The user UUID ident string",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "string",
                                    "description": "UUID ident string belonging to the user",
                                    "example": "8cd64045-7e68-4455-bcc2-e750c4372974"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user was successfully added to the group.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to perform this action"
                    },
                    "404": {
                        "description": "Unable to find the group or user"
                    }
                }
            },
            "delete": {
                "summary": "Remove group member",
                "description": "Remove an existing user from a group of which they are a member",
                "tags": [
                    "User",
                    "Group"
                ],
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "required": true,
                        "description": "Group UUID string",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "description": "The user UUID ident string",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "string",
                                    "description": "UUID ident string belonging to the user",
                                    "example": "8cd64045-7e68-4455-bcc2-e750c4372974"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The user was successfully removed from the group."
                    },
                    "403": {
                        "description": "You are not authorized to perform this action"
                    },
                    "404": {
                        "description": "Unable to find the group or user"
                    }
                }
            }
        },
        "/POG": {
            "get": {
                "summary": "Get all POGs",
                "description": "Get all POG entries currently available in database. By default only those assigned to the current user are returned",
                "tags": [
                    "POG"
                ],
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "required": false,
                        "description": "When value is true, API will return all POGs available, regardless of relationship",
                        "type": "boolean"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "description": "Search POG entries within scope.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all POGs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/POG"
                            }
                        }
                    },
                    "403": {
                        "description": "You are not authorized to view this resource"
                    }
                }
            }
        },
        "/POG/{POG}": {
            "get": {
                "summary": "Get ",
                "description": "Retrieved details for a given POG",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "POG ID",
                        "type": "string"
                    }
                ],
                "tags": [
                    "POG"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully found POG entry",
                        "schema": {
                            "$ref": "#/definitions/POG"
                        }
                    }
                }
            }
        },
        "/POG/{POG}/load/{type}": {
            "post": {
                "summary": "Load report into IPR",
                "description": "Load the requested project/report type into the Interactive POG Report database.",
                "parameters": [
                  {
                      "name": "POG",
                      "in": "path",
                      "required": true,
                      "description": "POG ID",
                      "type": "string"
                  },
                  {
                      "name": "type",
                      "in": "path",
                      "required": true,
                      "description": "Report type, either genomic, probe, or nonPOG",
                      "type": "string"
                  },
                  {
                    "in": "body",
                    "description": "Loading parameters for this report",
                    "required": false,
                    "name": "options",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "baseDir": {
                          "type": "string",
                          "example": "/projects/tumour_char/pog/reports/genomic/POG000/P00000_P00000/jreport_genomic_summary_v4.1.0/report",
                          "description": "Base directory of genomic report. Expects to find ./Reporting_Tracking.cfg, ./images and ./JReport_CSV_ODF folders"
                        },
                        "project": {
                          "type": "string",
                          "description": "Project to be used in determining the loader profile.",
                          "enum": [
                            "POG",
                            "gph_lymphoma",
                            "profyle"
                          ]
                        }
                      }
                    }
                  }
                ],
                "tags": [
                    "POG"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully loaded report into IPR",
                        "schema": {
                            "$ref": "#/definitions/report"
                        }
                    },
                    "400": {
                      "description": "Failed to load POG report. Possibly a required source file/image was not found, and the report failed to load."
                    },
                    "404": {
                      "description": "Unable to find the source files required for this POG."
                    },
                    "500": {
                      "description": "The server was not able to load the report due to an internal error."
                    }
                }
            }
        },
        "/POG/{POG}/reports": {
            "get": {
                "summary": "Get all reports for a POG",
                "description": "Retrieve list of all reports, of all types for a given POG",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "POG ID",
                        "type": "string"
                    }
                ],
                "tags": [
                    "POG"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully found all reports for this POG",
                        "schema": {
                            "$ref": "#/definitions/report"
                        }
                    }
                }
            }
        },
        "/POG/{POG}/reports/{report}": {
            "get": {
                "summary": "Get all reports for a POG",
                "description": "Retrieve list of all reports, of all types for a given POG",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "POG ID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                    "POG"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully found the requested report",
                        "schema": {
                            "$ref": "#/definitions/report"
                        }
                    },
                    "404": {
                      "description": "Unable to find the requested report"
                    }
                }
            },
            "put": {
              "summary": "Update report",
              "description": "Update an analysis report's settings.",
              "parameters": [
                {
                    "name": "POG",
                    "in": "path",
                    "required": true,
                    "description": "POG ID",
                    "type": "string"
                },
                {
                    "name": "report",
                    "in": "path",
                    "required": true,
                    "description": "Report ident",
                    "type": "string"
                },
                {
                  "in": "body",
                  "name": "settings",
                  "required": true,
                  "description": "Fields for updating a report's settings",
                  "schema": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "type": "string",
                        "enum": [
                          "ready",
                          "active",
                          "presented",
                          "archived"
                        ]
                      },
                      "reportVersion": {
                        "type": "string"
                      },
                      "kbVersion": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              ],
              "tags": [
                  "POG"
              ],
              "responses": {
                "200": {
                  "description": "Successfully updated the report",
                  "schema": {
                    "$ref": "#/definitions/report"
                  }
                }
              }
            }
        },
        "/POG/{POG}/user": {
            "post": {
                "summary": "Bind user to POG",
                "description": "Bind a new user to the specified POG",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "relationship",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "string",
                                    "example": "d1caf489-107f-4f3e-94bf-8004d4905763",
                                    "description": "User's UUID ident string"
                                },
                                "role": {
                                    "$ref": "#/definitions/POGRelationship"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "POG"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully bound user",
                        "schema": {
                            "$ref": "#/definitions/POGUser"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Unbind user from POG",
                "description": "Remove a user's relationship to the specified POG",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "relationship",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "POG"
                ],
                "responses": {
                    "204": {
                        "description": "User successfully unbound from POG"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/patientInformation": {
            "get": {
                "summary": "Get Patient Summary",
                "description": "Retrieve basic metadata patient details for a POG",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Genomic Report",
                    "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns basic patient meta details.",
                        "schema": {
                            "$ref": "#/definitions/patientInformation"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            },
            "put": {
                "summary": "Updated Patient Information",
                "description": "Updated some of the tracked patient meta details.",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "description": "The updated patient information object",
                        "schema": {
                            "$ref": "#/definitions/summary_patientInformation_update"
                        }
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns the update basic patient meta details.",
                        "schema": {
                            "$ref": "#/definitions/patientInformation"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/mutationSummary": {
            "get": {
                "summary": "Get Mutation Summary",
                "description": "Retrieve summary of mutation details for the POG",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns summary of mutation details.",
                        "schema": {
                            "$ref": "#/definitions/summary_mutationSummary"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            },
            "put": {
                "summary": "Updated Mutation Summary",
                "description": "Update some of the mutation summary details.",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    },
                    {
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "description": "The updated mutation summary object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mutationSignature": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/smallMut_signature"
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns the update basic patient meta details.",
                        "schema": {
                            "$ref": "#/definitions/summary_mutationSummary"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/tumourAnalysis": {
            "get": {
                "summary": "Get Tumour Analysis Summary",
                "description": "Retrieve summary of Tumour Analysis details for the POG",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns summary of Tumour Analysis details.",
                        "schema": {
                            "$ref": "#/definitions/summary_tumourAnalysis"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            },
            "put": {
                "summary": "Updated Tumour Analysis Summary",
                "description": "Update some of the Tumour Analysis summary details.",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    },
                    {
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "description": "The updated mutation summary object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "subtyping": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns summary of Tumour Analysis details.",
                        "schema": {
                            "$ref": "#/definitions/summary_tumourAnalysis"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/variantCounts": {
            "get": {
                "summary": "Get Variant counts",
                "description": "This endpoint is soon to be deprecated. Returns static analysis of variant counts",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns static counts of detected variants.",
                        "schema": {
                            "$ref": "#/definitions/summary_variantCounts"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/genomicAlterationsIdentified": {
            "get": {
                "summary": "Get key genomic alterations",
                "description": "Retrieve list of key identified genomic alterations",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns array of key identified gemomic alterations.",
                        "schema": {
                            "$ref": "#/definitions/summary_genomicAlteration"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/genomicAlterationsIdentified/{alteration}": {
            "delete": {
                "summary": "Remove key genomic alterations",
                "description": "Remove a key identified genomic alteration entry.",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    },
                    {
                        "name": "alteration",
                        "in": "path",
                        "required": true,
                        "description": "The alteration to be removed summary object",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "204": {
                        "description": "Alteration was successfully removed"
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/genomicEventsTherapeutic": {
            "get": {
                "summary": "Get genomic events with therapeutic association",
                "description": "Retrieve list of genomic events with potential therapeutic association",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns array of enomic events with potential therapeutic association.",
                        "schema": {
                            "$ref": "#/definitions/summary_genomicEvents"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/probeTarget": {
            "get": {
                "summary": "Get probe targets",
                "description": "Retrieve list of key identified genomic alterations",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "200": {
                        "description": "Returns array of key identified gemomic alterations.",
                        "schema": {
                            "$ref": "#/definitions/summary_probeTarget"
                        }
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/genomic/summary/probeTarget/{target}": {
            "delete": {
                "summary": "Remove probe target",
                "description": "Remove an idenfitied probe target.",
                "parameters": [
                    {
                        "name": "POG",
                        "in": "path",
                        "required": true,
                        "description": "Specified POGID",
                        "type": "string"
                    },
                    {
                        "name": "report",
                        "in": "path",
                        "required": true,
                        "description": "Analysis report ident",
                        "type": "string"
                    },
                    {
                        "name": "target",
                        "in": "path",
                        "required": true,
                        "description": "The probe target entry to be removed",
                        "type": "string"
                    }
                ],
                "tags": [
                  "Genomic Report",
                  "Genomic Summary"
                ],
                "responses": {
                    "204": {
                        "description": "Probe target was successfully removed"
                    },
                    "404": {
                        "description": "POG Not found"
                    }
                }
            }
        },
        "/POG/{POG}/report/{report}/probe/testInformation": {
          "get": {
              "summary": "Get probe test information",
              "description": "Get probe analysis test information",
              "parameters": [
                  {
                      "name": "POG",
                      "in": "path",
                      "required": true,
                      "description": "Specified POGID",
                      "type": "string"
                  },
                  {
                      "name": "report",
                      "in": "path",
                      "required": true,
                      "description": "Analysis report ident",
                      "type": "string"
                  }
              ],
              "tags": [
                "Probe Report"
              ],
              "responses": {
                  "204": {
                      "description": "Probe report test information was successfully received",
                      "schema": {
                        "type": "object",
                        "properties": {
                          "ident": {
                            "$ref": "#/definitions/ident"
                          },
                          "kbVersion": {
                            "type": "string"
                          },
                          "snpProbe": {
                            "type": "string"
                          },
                          "snpGenes": {
                            "type": "string"
                          },
                          "snpVars": {
                            "type": "string"
                          },
                          "fusionProbe": {
                            "type": "string"
                          },
                          "fusionGenes": {
                            "type": "string"
                          },
                          "fusionVars": {
                            "type": "string"
                          },
                          "createdAt": {
                              "$ref": "#/definitions/datetime"
                          },
                          "updatedAt": {
                              "$ref": "#/definitions/datetime"
                          }
                        }
                      }
                  },
                  "404": {
                      "description": "Probe report test results not found"
                  }
              }
          }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "username": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The location authentication details are stored in.",
                    "enum": [
                        "BCGSC",
                        "local"
                    ]
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "NewUser": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The location authentication details are stored in.",
                    "enum": [
                        "BCGSC",
                        "local"
                    ]
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "name": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "POG": {
            "type": "object",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "POGID": {
                    "type": "string",
                    "description": "BC Cancer Agency trial patient ID"
                },
                "patientInformation": {
                    "$ref": "#/definitions/patientInformation"
                },
                "POGUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/POGUser"
                    }
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "POGUser": {
            "type": "object",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "bioinformatician",
                        "analyst",
                        "reviewer",
                        "admin",
                        "clinician"
                    ]
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "addedBy": {
                    "$ref": "#/definitions/User"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "summary_sampleInfo": {
            "type": "object",
            "properties": {
                "sample": {
                    "type": "string"
                },
                "Patho TC": {
                    "type": "string"
                },
                "Biopsy Site": {
                    "type": "string"
                },
                "Sample Name": {
                    "type": "string"
                },
                "Primary Site": {
                    "type": "string"
                },
                "Collection Date": {
                    "type": "string"
                }
            }
        },
        "summary_seqQC": {
            "type": "object",
            "properties": {
                "Reads": {
                    "type": "string"
                },
                "bioQC": {
                    "type": "string"
                },
                "labQC": {
                    "type": "string"
                },
                "Sample": {
                    "type": "string"
                },
                "Library": {
                    "type": "string"
                },
                "Coverage": {
                    "type": "string"
                },
                "Input_ng": {
                    "type": "string"
                },
                "Input_ug": {
                    "type": "string"
                },
                "Protocol": {
                    "type": "string"
                },
                "Sample Name": {
                    "type": "string"
                },
                "Duplicate_Reads_Perc": {
                    "type": "string"
                }
            }
        },
        "patientInformation": {
            "type": "object",
            "description": "Patient details and meta information",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "physician": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female",
                        "Not Defined"
                    ]
                },
                "age": {
                    "type": "string"
                },
                "POGID": {
                    "type": "string"
                },
                "caseType": {
                    "type": "string",
                    "enum": [
                        "Adult",
                        "Pediatric"
                    ]
                },
                "tumourType": {
                    "type": "string"
                },
                "reportDate": {
                    "type": "string"
                },
                "biopsySite": {
                    "type": "string"
                },
                "tumourSample": {
                    "type": "string"
                },
                "tumourProtocol": {
                    "type": "string"
                },
                "constitutionalSample": {
                    "type": "string"
                },
                "constitutionalProtocol": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "summary_patientInformation_update": {
            "type": "object",
            "description": "Patient details and meta information",
            "properties": {
                "physician": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female",
                        "Not Specified"
                    ]
                },
                "age": {
                    "type": "string"
                },
                "caseType": {
                    "type": "string",
                    "enum": [
                        "Adult",
                        "Pediatric"
                    ]
                },
                "tumourType": {
                    "type": "string"
                },
                "biopsySite": {
                    "type": "string"
                },
                "tumourSample": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                },
                "comment": {
                    "$ref": "#/definitions/updateComment"
                }
            }
        },
        "summary_tumourAnalysis": {
            "type": "object",
            "description": "Details about the tumour.",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "tumourContent": {
                    "type": "integer"
                },
                "ploidy": {
                    "type": "string"
                },
                "normalExpressionComparator": {
                    "type": "string"
                },
                "diseaseExpressionComparator": {
                    "type": "string"
                },
                "subtyping": {
                    "type": "string"
                },
                "tcgaColor": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "summary_mutationSummary": {
            "type": "object",
            "description": "Details of the computed mutational signature",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "mutationSignature": {
                    "$ref": "#/definitions/smallMut_signature"
                },
                "totalSNV": {
                    "type": "string"
                },
                "totalIndel": {
                    "type": "string"
                },
                "totalSV": {
                    "type": "string"
                },
                "snvPercentileTCGA": {
                    "type": "integer"
                },
                "snvPercentileDisease": {
                    "type": "string"
                },
                "indelPercentileTCGA": {
                    "type": "integer"
                },
                "indelPercentileDisease": {
                    "type": "string"
                },
                "svPercentilePOG": {
                    "type": "integer"
                },
                "snvPercentileTCGACategory": {
                    "type": "string"
                },
                "snvPercentileDiseaseCategory": {
                    "type": "string"
                },
                "indelPercentileTCGACategory": {
                    "type": "string"
                },
                "indelPercentileDiseaseCategory": {
                    "type": "string"
                },
                "svPercentilePOGCategory": {
                    "type": "string"
                },
                "snvReportCategory": {
                    "type": "string"
                },
                "indelReportCategory": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "summary_variantCounts": {
            "type": "object",
            "description": "Soon to be deprecated, this output provides static counts of variants identified in the report.",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "smallMutations": {
                    "type": "integer"
                },
                "CNVs": {
                    "type": "integer"
                },
                "SVs": {
                    "type": "integer"
                },
                "expressionOutliers": {
                    "type": "integer"
                },
                "variantsUnknown": {
                    "type": "integer"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "summary_genomicAlteration": {
            "type": "object",
            "description": "Describes an identified genomic alteration",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "geneVariant": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "summary_genomicEvents": {
            "type": "object",
            "description": "Genomic events with potential therapeutic targets",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "genomicEvent": {
                    "type": "string"
                },
                "approvedThisCancerType": {
                    "type": "string"
                },
                "approvedOtherCancerType": {
                    "type": "string"
                },
                "emergingPreclinicalEvidence": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "summary_probeTarget": {
            "type": "object",
            "description": "Entries detected by rapid analysis pipeline",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "gene": {
                    "type": "string"
                },
                "variant": {
                    "type": "string"
                },
                "sample": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "smallMut_signature": {
            "type": "object",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "signature": {
                    "type": "object"
                },
                "pearson": {
                    "type": "number",
                    "format": "float"
                },
                "nnls": {
                    "type": "number",
                    "format": "float"
                },
                "associations": {
                    "type": "string"
                },
                "features": {
                    "type": "string"
                },
                "numCancerType": {
                    "type": "string"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "report": {
          "type": "object",
          "description": "Analysis Report object",
          "properties": {
            "ident": {
              "type": "string",
              "example": "A1B2C"
            },
            "type": {
              "type": "string",
              "enum": [
                "genomic",
                "probe"
              ]
            },
            "sampleInfo": {
              "$ref": "#/definitions/summary_sampleInfo"
            },
            "config": {
              "type": "string"
            },
            "createdAt": {
                "$ref": "#/definitions/datetime"
            },
            "updatedAt": {
                "$ref": "#/definitions/datetime"
            },
            "patientInformation": {
              "$ref": "#/definitions/patientInformation"
            },
            "tumourAnalysis": {
              "$ref": "#/definitions/summary_tumourAnalysis"
            },
            "createdBy": {
              "$ref": "#/definitions/User"
            },
            "pog": {
              "$ref": "#/definitions/POG"
            }
          }
        },
        "smallMut_mutation": {
            "type": "object",
            "description": "Detected small mutations",
            "properties": {
                "ident": {
                    "$ref": "#/definitions/ident"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "mutationType": {
                    "type": "string"
                },
                "gene": {
                    "type": "string"
                },
                "transcript": {
                    "type": "string"
                },
                "proteinChange": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "refAlt": {
                    "type": "string"
                },
                "zygosity": {
                    "type": "string"
                },
                "ploidyCorrCpChange": {
                    "type": "string"
                },
                "lohState": {
                    "type": "string"
                },
                "tumourReads": {
                    "type": "string"
                },
                "RNAReads": {
                    "type": "string"
                },
                "expressionRpkm": {
                    "type": "number",
                    "format": "float"
                },
                "foldChange": {
                    "type": "number",
                    "format": "float"
                },
                "TCGAPerc": {
                    "type": "integer"
                },
                "createdAt": {
                    "$ref": "#/definitions/datetime"
                },
                "updatedAt": {
                    "$ref": "#/definitions/datetime"
                }
            }
        },
        "ident": {
            "type": "string",
            "format": "UUIDv4",
            "example": "8cd64045-7e68-4455-bcc2-e750c4372974",
            "description": "Randomlly generated public unique ID"
        },
        "datetime": {
            "type": "string",
            "format": "datetime",
            "example": "2017-03-30T19:04:13.354Z",
            "description": "YYYY-MM-DDTZHH:ii:ss timestamp."
        },
        "dataVersion": {
            "type": "integer",
            "description": "Describes which edit version this entry is. Default is 0"
        },
        "POGRelationship": {
            "type": "string",
            "enum": [
                "bioinformatician",
                "analyst",
                "reviewer",
                "admin",
                "clinician"
            ]
        },
        "updateComment": {
            "type": "string",
            "description": "A reason why this updated was made."
        },
        "ACLDenied": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string",
                    "example": "You are not authorized to view this resource."
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}