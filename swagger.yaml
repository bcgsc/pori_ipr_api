openapi: 3.0.0
info:
  description: Designed to be consumed by the POG Report Client, the endpoints are
    available for authorized users to consume.
  version: 1.0.0
  title: POG Reports
  contact:
    name: IPR Team
    email: ipr@bcgsc.ca
  license:
    name: Proprietary
tags:
  - name: Genomic Report
    description: Genomic analysis report
  - name: Probe Report
    description: Rapid analysis pipeline report
  - name: POG
    description: Personalized Oncogenomics related object
  - name: User
    description: User object
  - name: Group
    description: User permissions - groups.
  - name: Genomic Summary
    description: Genomic Report - Summary details for a POG report
  - name: Germline Report
    description: Routes associated with creating, reviewing, and exporting the Germline Report
paths:
  /user:
    get:
      summary: Get all users
      description: If your account has permissions, this will return all detailed user
        object descriptions in the database.
      tags:
        - User
      security:
        - basicAuth: []
      responses:
        "200":
          description: For those authorized, returns all available users in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Denied access to list of all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ACLDenied"
    post:
      summary: Authorize new account
      description: Authorize a new user to access IPR. Field 'type' should be equal 'local' or 'bcgsc'.
      tags:
        - User
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/NewUser"
      responses:
        "200":
          description: User has been successfully added to the system
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input was provided
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Insufficient access to authorize new accounts
        "409":
          description: Username is already being used
  "/user/{user}":
    put:
      summary: Update a user account
      description: Update the user specified user details
      tags:
        - User
      security:
        - basicAuth: []
      parameters:
        - name: user
          in: path
          required: true
          description: User's UUID string
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/NewUser'
              required:
                - user
      responses:
        "200":
          description: User account was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
    delete:
      summary: Remove a single user
      description: Delete a user's access to the API. This does not remove the record from
        the dataStore the user is located in.
      tags:
        - User
      security:
        - basicAuth: []
      parameters:
        - name: user
          in: path
          required: true
          description: User's UUID string
          schema:
            type: string
      responses:
        "204":
          description: The user has been successfully removed
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Insufficient access to remove the user
        "404":
          description: Unable to find the requested user
  /user/me:
    get:
      summary: Return self
      description: Return the current authenticated user
      tags:
        - User
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns the current authenticated self
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: No authenticated user available.
  /user/settings:
    get:
      summary: Return user settings
      description: Return the current authenticated user's settings
      tags:
        - User
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns settings for the current user
          content:
            application/json:
              schema:
                type: object
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: No settings available for the current authenticated user.
    put:
      summary: Update a users settings
      description: Update settings for a specific user
      tags:
        - User
      security:
        - basicAuth: []
      requestBody:
        description: The updated user settings to be stored in the database.
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: User settings was successfully updated
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: number
                    - type: array
                      items:
                        $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /user/search:
    get:
      summary: User Search
      description: Provided some input query, search the user database and return results.
        Query is search against first name, last name, email, and username.
      tags:
        - User
      security:
        - basicAuth: []
      parameters:
        - name: query
          in: query
          required: true
          description: String to search user database against. Wildcard matching on either
            side of string
          schema:
            type: string
      responses:
        "200":
          description: Successfully searched user database against the provided query.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /user/group:
    get:
      summary: Get all groups
      description: Return all groups currently listed in the report ACL database. This is
        not linked or connected to the BCGSC LDAP database. Changes in one do
        not affect the other.
      tags:
        - Group
        - User
      security:
        - basicAuth: []
      responses:
        "200":
          description: The API will return all available groups it has on record.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to view this resource
    post:
      summary: Create new group
      description: Create a new ACL group in the POG Report API
      tags:
        - User
        - Group
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the new group
                  type: string
                owner:
                  description: UUID of the owner of the new group
                  type: string
              required:
                - name
                - owner
      responses:
        "200":
          description: Group successfully added to database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not allowed to create new group entries.
  "/user/group/{group}":
    get:
      summary: Get a group
      description: Get detailed group object from ident.
      tags:
        - User
        - Group
      security:
        - basicAuth: []
      parameters:
        - name: group
          in: path
          required: true
          description: Group UUID string
          schema:
            type: string
      responses:
        "200":
          description: Group found, API will return the detailed group object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to view the resource
    put:
      summary: Update a group
      description: Update the groups definition in the IPR API database
      tags:
        - User
        - Group
      security:
        - basicAuth: []
      parameters:
        - name: group
          in: path
          required: true
          description: Group UUID string
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the new group
                  type: string
                owner:
                  description: UUID of the owner of the new group
                  type: string
                required:
                  - name
                  - owner
      responses:
        "200":
          description: Successfully updated the group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Unable to find the group
    delete:
      summary: Remove a group
      description: Remove a group entry from the database. Doing this will immediately
        revoke group member's access to defined resources.
      tags:
        - User
        - Group
      security:
        - basicAuth: []
      parameters:
        - name: group
          in: path
          required: true
          description: Group UUID string
          schema:
            type: string
      responses:
        "204":
          description: The group was successfully removed
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Unable to find the group or user
  "/user/group/{group}/member":
    get:
      summary: Get group members
      description: Get detailed description of all group members.
      tags:
        - User
        - Group
      security:
        - basicAuth: []
      parameters:
        - name: group
          in: path
          required: true
          description: Group UUID string
          schema:
            type: string
      responses:
        "200":
          description: Retrieved all group members.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to view group members
        "404":
          description: Unable to find the group or user
    post:
      summary: Add group member
      description: Add an existing user as a member to the specified group
      tags:
        - User
        - Group
      security:
        - basicAuth: []
      parameters:
        - name: group
          in: path
          required: true
          description: Group UUID string
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: UUID ident string belonging to the user
                  example: 8cd64045-7e68-4455-bcc2-e750c4372974
              required:
                - user
      responses:
        "200":
          description: The user was successfully added to the group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Unable to find the group or user
    delete:
      summary: Remove group member
      description: Remove an existing user from a group of which they are a member
      tags:
        - User
        - Group
      security:
        - basicAuth: []
      parameters:
        - name: group
          in: path
          required: true
          description: Group UUID string
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: UUID ident string belonging to the user
                  example: 8cd64045-7e68-4455-bcc2-e750c4372974
              required:
                - user
      responses:
        "204":
          description: The user was successfully removed from the group.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to perform this action
        "404":
          description: Unable to find the group or user
  /POG:
    get:
      summary: Get all POGs
      description: Get all POG entries currently available in database. By default only those
        assigned to the current user are returned
      tags:
        - POG
      security:
        - basicAuth: []
      parameters:
        - name: all
          in: query
          required: false
          description: When value is true, API will return all POGs available, regardless of relationship
          schema:
            type: boolean
        - name: query
          in: query
          required: false
          description: Search POG entries within scope
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved all POGs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/POG"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to view this resource
  "/POG/{POG}":
    get:
      summary: Get details of a specific POG
      description: Retrieved details for a given POG
      parameters:
        - $ref: "#/components/parameters/POG"
      tags:
        - POG
      security:
        - basicAuth: []
      responses:
        "200":
          description: Successfully found POG entry
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/POG"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: You are not authorized to view this resource
  "/POG/{POG}/load/{type}":
    post:
      summary: Load report into IPR
      description: Load the requested project/report type into the Interactive POG Report
        database.
      tags:
        - POG
      security:
        - basicAuth: []
      parameters:
        - $ref: "#/components/parameters/POG"
        - name: type
          in: path
          required: true
          description: Report type, either genomic, probe, or nonPOG
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                options:
                  description: Loading parameters for this report
                  type: object
                  properties:
                    baseDir:
                      type: string
                      example: /projects/tumour_char/pog/reports/genomic/POG000/P00000_P00000/jreport_genomic_summary_v4.1.0/report
                      description: Base directory of genomic report. Expects to find
                        ./Reporting_Tracking.cfg, ./images and ./JReport_CSV_ODF folders
                    project:
                      type: string
                      description: Project to be used in determining the loader profile.
                      enum:
                        - POG
                        - gph_lymphoma
                        - profyle
      responses:
        "200":
          description: Successfully loaded report into IPR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/report"
        "400":
          description: Failed to load POG report. Possibly a required source file/image was
            not found, and the report failed to load.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Unable to find the source files required for this POG.
        "500":
          description: The server was not able to load the report due to an internal error.
  "/POG/{POG}/reports":
    get:
      summary: Get all reports for a POG
      description: Retrieve list of all reports, of all types for a given POG
      parameters:
        - $ref: "#/components/parameters/POG"
      tags:
        - POG
      security:
        - basicAuth: []
      responses:
        "200":
          description: Successfully found all reports for this POG
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/report"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  "/POG/{POG}/reports/{report}":
    get:
      summary: Get all reports for a POG
      description: Retrieve list of all reports, of all types for a given POG
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - POG
      security:
        - basicAuth: []
      responses:
        "200":
          description: Successfully found the requested report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/report"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Unable to find the requested report
    put:
      summary: Update report
      description: Update an analysis report's settings
      tags:
        - POG
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  description: Fields for updating a report's settings
                  type: object
                  properties:
                    state:
                      type: string
                      enum:
                        - ready
                        - active
                        - presented
                        - archived
                    reportVersion:
                      type: string
                    kbVersion:
                      type: string
                    type:
                      type: string
              required:
                - settings
      responses:
        "200":
          description: Successfully updated the report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/report"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  "/POG/{POG}/user":
    post:
      summary: Bind user to POG
      description: Bind a new user to the specified POG
      tags:
        - POG
      parameters:
        - $ref: "#/components/parameters/POG"
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                relationship:
                  type: object
                  properties:
                    user:
                      type: string
                      example: d1caf489-107f-4f3e-94bf-8004d4905763
                      description: User's UUID ident string
                    role:
                      $ref: "#/components/schemas/POGRelationship"
              required:
                - relationship
      responses:
        "200":
          description: Successfully bound user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/POGUser"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Unable to find provided user
    delete:
      summary: Unbind user from POG
      description: Remove a user's relationship to the specified POG
      tags:
        - POG
      parameters:
        - $ref: "#/components/parameters/POG"
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                relationship:
                  type: object
                  properties:
                    user:
                      type: string
              required:
                - relationship
      responses:
        "204":
          description: User successfully unbound from POG
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Unable to find a provided user and/or unable to remove a user from a
            POG
  "/POG/{POG}/report/{report}/genomic/summary/patient-information":
    get:
      summary: Get Patient Summary
      description: Retrieve basic metadata patient details for a POG
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns basic patient meta details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/patientInformation"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
    put:
      summary: Updated Patient Information
      description: Updated some of the tracked patient meta details
      tags:
        - Genomic Report
        - Genomic Summary
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                update:
                  $ref: "#/components/schemas/summary_patientInformation_update"
              required:
                - update
      responses:
        "200":
          description: Returns the update basic patient meta details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/patientInformation"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
  "/POG/{POG}/report/{report}/genomic/summary/mutation-summary":
    get:
      summary: Get Mutation Summary
      description: Retrieve summary of mutation details for the POG
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns summary of mutation details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_mutationSummary"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
    put:
      summary: Updated Mutation Summary
      description: Update some of the mutation summary details
      tags:
        - Genomic Report
        - Genomic Summary
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                update:
                  description: The updated mutation summary object
                  type: object
                  properties:
                    mutationSignature:
                      type: array
                      items:
                        $ref: "#/components/schemas/smallMut_signature"
              required:
                - update
      responses:
        "200":
          description: Returns the update basic patient meta details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_mutationSummary"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
  "/POG/{POG}/report/{report}/genomic/summary/tumour-analysis":
    get:
      summary: Get Tumour Analysis Summary
      description: Retrieve summary of Tumour Analysis details for the POG
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns summary of Tumour Analysis details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_tumourAnalysis"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
    put:
      summary: Updated Tumour Analysis Summary
      description: Update some of the Tumour Analysis summary details
      tags:
        - Genomic Report
        - Genomic Summary
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                update:
                  description: The updated mutation summary object
                  type: object
                  properties:
                    subtyping:
                      type: string
              required:
                - update
      responses:
        "200":
          description: Returns summary of Tumour Analysis details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_tumourAnalysis"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
  "/POG/{POG}/report/{report}/genomic/summary/variant-counts":
    get:
      summary: Get Variant counts
      description: This endpoint is soon to be deprecated. Returns static analysis of variant
        counts
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns static counts of detected variants
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_variantCounts"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
  "/POG/{POG}/report/{report}/genomic/summary/genomicAlterationsIdentified":
    get:
      summary: Get key genomic alterations
      description: Retrieve list of key identified genomic alterations
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns an array of key identified gemomic alterations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_genomicAlteration"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
    post:
      summary: Add key genomic alterations
      description: Add new key genomic alterations to a analysis report
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns newly created key genomic alterations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_genomicAlteration"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: User is not authorized to add key genomic alterations
  "/POG/{POG}/report/{report}/genomic/summary/genomicAlterationsIdentified/{alteration}":
    delete:
      summary: Remove key genomic alterations
      description: Remove a key identified genomic alteration entry.
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
        - name: alteration
          in: path
          required: true
          description: The alteration to be removed summary object
          schema:
            type: string
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "204":
          description: Alteration was successfully removed
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
  "/POG/{POG}/report/{report}/genomic/summary/genomic-events-therapeutic":
    get:
      summary: Get genomic events with therapeutic association
      description: Retrieve list of genomic events with potential therapeutic association
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns array of enomic events with potential therapeutic association
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_genomicEvents"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
  "/POG/{POG}/report/{report}/genomic/summary/probeTarget":
    get:
      summary: Get probe targets
      description: Retrieve list of key identified genomic alterations
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns array of key identified gemomic alterations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/summary_probeTarget"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
  "/POG/{POG}/report/{report}/genomic/summary/probeTarget/{target}":
    delete:
      summary: Remove probe target
      description: Remove an idenfitied probe target.
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
        - name: target
          in: path
          required: true
          description: The probe target entry to be removed
          schema:
            type: string
      tags:
        - Genomic Report
        - Genomic Summary
      security:
        - basicAuth: []
      responses:
        "204":
          description: Probe target was successfully removed
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: POG Not found
  "/POG/{POG}/report/{report}/probe/testInformation":
    get:
      summary: Get probe test information
      description: Get probe analysis test information
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Probe Report
      security:
        - basicAuth: []
      responses:
        "204":
          description: Probe report test information was successfully received
          content:
            application/json:
              schema:
                type: object
                properties:
                  ident:
                    $ref: "#/components/schemas/ident"
                  kbVersion:
                    type: string
                  snpProbe:
                    type: string
                  snpGenes:
                    type: string
                  snpVars:
                    type: string
                  fusionProbe:
                    type: string
                  fusionGenes:
                    type: string
                  fusionVars:
                    type: string
                  createdAt:
                    $ref: "#/components/schemas/datetime"
                  updatedAt:
                    $ref: "#/components/schemas/datetime"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Probe report test results not found
  /reports:
    get:
      summary: Get all analysis reports
      description: Get all POG analysis reports that you have acess to
      tags:
        - Reports
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns an array of POG analysis reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/report"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Insufficient access to get POG reports
  "/POG/{POG}/report/{report}/genomic/summary/microbial":
    get:
      summary: Get microbial data
      description: Get microbial data for a specific POG report
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      tags:
        - Microbial
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns an object of microbial data
          content:
            application/json:
              schema:
                type: object
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /project:
    get:
      summary: Get all projects
      description: Returns all projects that the user has access to
      tags:
        - Projects
      security:
        - basicAuth: []
      responses:
        "200":
          description: Get all projects that the user has access to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: User doesn't have access to projects
    post:
      summary: Add new project
      description: Add a new project to the list of projects
      tags:
        - Projects
      security:
        - basicAuth: []
      responses:
        "200":
          description: A project was successfully added or successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: User isn't allowed to add a project
  "/POG/{POG}/report/{report}/genomic/therapeutic-targets":
    get:
      summary: Get therapeutic targets
      description: Returns all therapeutic targets for an analysis report
      tags:
        - Therapeutic
        - Therapeutic Target
        - Therapeutic Targets
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      responses:
        "200":
          description: Get therapeutic targets for analysis report
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/therapeuticTarget"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: Don't have permissions to get therapeutic targets
    post:
      summary: Create a new therapeutic target
      description: Creates a new therapeutic target and sdfs
      tags:
        - Therapeutic
        - Therapeutic Target
        - Therapeutic Targets
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      responses:
        "200":
          description: Add therapeutic targets to analysis report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/therapeuticTarget"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  "/POG/{POG}/report/{report}/genomic/summary/pathway-analysis":
    get:
      summary: Get report pathway analysis
      description: Get a reports pathway analysis image
      tags:
        - Pathway Analysis
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns a reports pathway analysis image
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pathwayAnalysis"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: User doesn't have permissions to access this analysis image
    put:
      summary: Create/update pathway analysis image
      description: Create a new pathway analysis image or update an existing pathway analysis image
      tags:
        - Pathway Analysis
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns the newly created/updated pathway analysis model
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pathwayAnalysis"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: User doesn't have permissions to create/update a pathway analysis image
    post:
      summary: Upload new pathway analysis file
      description: Upload a new pathway analysis file and create new db entry
      tags:
        - Pathway Analysis
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      responses:
        "200":
          description: Uploads new pathway analysis image and returns new pathway analysis object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pathwayAnalysis"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: User doesn't have permissions to upload pathway analysis image
  "/POG/{POG}/report/{report}/genomic/somatic-mutations/small-mutations":
    get:
      summary: Get somatic small mutations
      description: Returns an analysis reports somatic small mutations
      tags:
        - Mutations
        - Small Mutations
      parameters:
        - $ref: "#/components/parameters/POG"
        - $ref: "#/components/parameters/report"
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns a reports somatic small mutations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/smallMutation"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: User doesn't have permissions to access somatic small mutations
  "/germline-small-mutation":
    get:
      summary: Get all germline small mutation reports
      description: Returns all germline small mutation reports the user has access to
      tags:
        - Germline Report
      parameters:
        - name: search
          in: query
          required: false
          description: POGID to search reports for
          schema:
            type: string
        - name: project
          in: query
          required: false
          description: Search report for project name
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: The end of the set of reports to retrieve
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: The start of the set of reports to retrieve
          schema:
            type: integer
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns an object containing the germline reports and the number of reports
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  reports:
                    type: array
                    items:
                      $ref: "#/components/schemas/germlineSmallMutation"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          description: User doesn't have permissions to access germline small mutations
  # Below are all skeleton routes, with no details added
  # "/POG/{POG}/report/{report}/image/mutation-summary":
  # "/POG/{POG}/report/{report}/genomic/mavis":
  # "/POG/{POG}/load/genomic":
  # "/germline-small-mutation/patient/{POG}/biopsy/{biopsy}/report/{report}":
  # "/germline-small-mutation/patient/{POG}/biopsy/{biopsy}/report/{report}/variant/{variant}":
  # "/POG/{POG}/report/{report}/probe/alterations":
  # "/POG/{POG}/report/{report}/genomic/somatic-mutations/small-mutations/{mutation}":
  # "/POG/{POG}/report/{report}/genomic/somatic-mutations/small-mutations/{type}":
  "/patient/{POG}/biopsy/{analysis}":
    get:
      summary: Get the details of a Germline Report
      tags:
        - Germline Report
      parameters:
        - $ref: '#/components/parameters/POG'
        - $ref: '#/components/parameters/analysis'
      security:
        - basicAuth: []
      responses:
        "200":
          description: Returns 
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis:
                    type: object
                  biofx_assigned:
                    $ref: '#/components/schemas/User'
                  reviews:
                    type: array
                    items:
                      type: object
                  variants:
                    type: array
                    items:
                      type: object
    post:
      summary: Upload a Germline Report
      tags:
        - Germline Report
      parameters:
        - $ref: '#/components/parameters/POG'
        - $ref: '#/components/parameters/analysis'
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - source
                - version
                - patient
                - rows
                - project
                - normal_library
              properties:
                source:
                  type: string
                  description: source file path
                version:
                  type: string
                  description: source file version
                  example: v0.0.1
                patient:
                  type: string
                  description: patient identifier
                  example: POG1234
                rows:
                  type: array
                  description: Data rows
                  items:
                    type: object
                    required:
                      - cgl_category
                      - preferred_transcript
                      - gmaf
                    properties:
                      flagged:
                        type: string
                      clinvar:
                        type: string
                      cgl_category:
                        type: string
                      gmaf:
                        type: string
                      transcript:
                        type: string
                      gene:
                        type: string
                      variant:
                        type: string
                      impact:
                        type: string
                      chromosome:
                        type: string
                      position:
                        type: string
                      dbSNP:
                        type: string
                      reference:
                        type: string
                      alteration:
                        type: string
                      zygosity_germline:
                        type: string
                      preferred_transcript:
                        type: boolean
                      hgvs_cdna:
                        type: string
                      hgvs_protein:
                        type: string
                      zygosity_tumour:
                        type: string
                      genomic_variant_reads:
                        type: string
                      rna_variant_reads:
                        type: string
                      gene_somatic_abberation:
                        type: string
                      notes:
                        type: string
                      type:
                        type: string
                      patient_history:
                        type: string
                      family_history:
                        type: string
                      tcga_comp_norm_percentile:
                        type: string
                      tcga_comp_percentile:
                        type: string
                      gtex_comp_percentile:
                        type: string
                      fc_bodymap:
                        type: string
                      gene_expression_rpkm:
                        type: number
                      additional_info:
                        type: string
                project:
                  type: string
                  description: Project name
                normal_library:
                  type: string
                  example: P12345
                  description: The germline/normal library name
      responses:
        "400":
          description: Missing Required Fields or the Report already Exists
        "200":
          description: The report was created
          content:
            application/json:
              schema:
                type: object
                properties:
                  variants:
                    type: object
                  analysis:
                    type: object
                    properties:
                      pog:
                        $ref: '#/components/schemas/POG'
                  biofx_assigned:
                    $ref: '#/components/schemas/User'



externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://ipr-api.bcgsc.ca/api/1.0
    description: Production server (uses live data)
  - url: https://dev-ipr.bcgsc.ca:8081/api/1.0
    description: Development server
components:
  parameters:
    POG:
      name: POG
      in: path
      required: true
      description: POG ID
      schema:
        type: string
    report:
      name: report
      in: path
      required: true
      description: Analysis report ident
      schema:
        type: string
    analysis:
      name: analysis
      in: path
      required: true
      description: the analysis (or biopsy) ID
      schema:
        type: string
        format: UUIDv4
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    User:
      type: object
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        username:
          type: string
        type:
          type: string
          description: The location authentication details are stored in.
          enum:
            - bcgsc
            - local
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        lastLogin:
          $ref: "#/components/schemas/datetime"
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    NewUser:
      type: object
      description: New user to be added to the database
      properties:
        username:
          type: string
        password:
          type: string
        type:
          type: string
          description: The location authentication details are stored in.
          enum:
            - bcgsc
            - local
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
    Group:
      type: object
      properties:
        id:
          type: int
        ident:
          $ref: "#/components/schemas/ident"
        name:
          type: string
        owner_id:
          type: int
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
        owner: 
          $ref: "#/components/schemas/User"
    POG:
      allOf:
        - $ref: "#/components/schemas/POGModel"
        - type: object
          properties:
            patientInformation: 
              $ref: "#/components/schemas/patientInformation"
        - type: object
          properties:
            analysis_reports:
              type: array
              items:
                $ref: "#/components/schemas/report"
        - type: object
          properties:
            projects:
              type: array
              items:
                $ref: "#/components/schemas/Project"
    POGModel:
      type: object
      properties:
        id:
          type: integer
        ident:
          $ref: "#/components/schemas/ident"
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
        POGID:
          $ref: "#/components/schemas/POGID"
        nonPOG:
          type: boolean
        project:
          type: string
        alternate_identifier:
          $ref: "#/components/schemas/POGID"
        age_of_consent:
          type: integer
    POGUser:
      type: object
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        role:
          type: string
          enum:
            - bioinformatician
            - analyst
            - reviewer
            - admin
            - clinician
        user:
          $ref: "#/components/schemas/User"
        addedBy:
          $ref: "#/components/schemas/User"
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    report:
      allOf:
        - $ref: "#/components/schemas/reportModel"
        - type: object
          properties:
            patientInformation:
              $ref: "#/components/schemas/patientInformation"
        - type: object
          properties:
            tumourAnalysis:
              $ref: "#/components/schemas/summary_tumourAnalysis"
        - type: object
          properties:
            pog:
              $ref: "#/components/schemas/POGModel"
        - type: object
          properties:
            createdBy:
              $ref: "#/components/schemas/User"
        - type: object
          properties:
            analysis:
              $ref: "#/components/schemas/analysis"
        - type: object
          properties:
            users:
              type: array
              items:
                $ref: "#/components/schemas/User"
    reportModel:
      type: object
      description: Analysis Report model object
      properties:
        ident:
          $ref: "#/components/schemas/reportIdent"
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
        type:
          type: string
          enum:
            - genomic
            - probe
        sampleInfo:
          type: array
          items:
            $ref: "#/components/schemas/summary_sampleInfo"
        seqQC:
          type: array
          items:
            $ref: "#/components/schemas/summary_seqQC"
        config:
          type: string
        reportVersion:
          type: string
        kbVersion:
          type: string
        state:
          type: string
        expression_matrix:
          type: string
        analysis_id:
          type: integer
    analysis:
      type: object
      properties:
        id:
          type: integer
        ident:
          $ref: "#/components/schemas/ident"
        libraries:
          type: object
          properties:
            normal:
              type: string
            tumour:
              type: string
            transcriptome:
              type: string
        notes:
          type: string
        clinical_biopsy:
          type: string
        analysis_biopsy:
          type: string
        bioapps_source_id:
          type: string
        disease:
          type: string
        biopsy_notes:
          type: string
        priority:
          type: integer
        onco_panel_submitted:
          $ref: "#/components/schemas/datetime"
        comparator_disease:
          type: object
          properties:
            all:
              type: array
              items:
                type: string
            analysis:
              type: string
            tumour_type_kb:
              type: string
            tumour_type_report:
              type: string
        comparator_normal:
          type: object
          properties:
            gtex_biopsy:
              type: array
              items:
                type: string
            gtex_primary:
              type: array
              items:
                type: string
            normal_biopsy:
              type: array
              items:
                type: string
            normal_primary:
              type: array
              items:
                type: string
        biopsy_site:
          type: string
        biopsy_type:
          type: string
        biopsy_date:
          $ref: "#/components/schemas/datetime"
        date_analysis:
          $ref: "#/components/schemas/datetime"
        date_presentation:
          $ref: "#/components/schemas/datetime"
        threeLetterCode:
          type: string
        physician:
          type: array
          items:
            type: object
            properties:
              last_name:
                type: string
              first_name:
                type: string
        pediatric_id:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
        pog:
          allOf:
            - $ref: "#/components/schemas/POG"
            - type: object
              properties:
                projects:
                  type: array
                  items:
                    $ref: "#/components/schemas/Project"
    Project:
      type: object
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        name:
          type: string
    summary_sampleInfo:
      type: object
      properties:
        sample:
          type: string
        Patho TC:
          type: string
        Biopsy Site:
          type: string
        Sample Name:
          type: string
        Primary Site:
          type: string
        Collection Date:
          type: string
    summary_seqQC:
      type: object
      properties:
        Reads:
          type: string
        bioQC:
          type: string
        labQC:
          type: string
        Sample:
          type: string
        Library:
          type: string
        Coverage:
          type: string
        Input_ng:
          type: string
        Input_ug:
          type: string
        Protocol:
          type: string
        Sample Name:
          type: string
        Duplicate_Reads_Perc:
          type: string
    patientInformation:
      type: object
      description: Patient details and meta information
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        physician:
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
            - Not Defined
        age:
          type: string
        POGID:
          type: string
        caseType:
          type: string
          enum:
            - Adult
            - Pediatric
        tumourType:
          type: string
        reportDate:
          type: string
        biopsySite:
          type: string
        tumourSample:
          type: string
        tumourProtocol:
          type: string
        constitutionalSample:
          type: string
        constitutionalProtocol:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    pathwayAnalysis:
      type: object
      description: Pathway analysis details and SVG image
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        original:
          type: string
        pathway:
          type: string
          description: XML of pathway analysis SVG image
    therapeuticTarget:
      type: object
      description: A therapeutic target from an analysis report
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        type:
          type: string
          enum:
            - therapeutic
            - chemoresistance
        rank:
          type: integer
        target:
          type: object
        targetContext:
          type: string
        resistance:
          type: string
        biomaker:
          type: object
        notes:
          type: string
    smallMutation:
      type: object
      description: Somatic small mutation information
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        mutationType:
          type: string
          enum:
            - clinical
            - nostic
            - biological
            - unknown
        gene:
          type: string
        transcript:
          type: string
        proteinChange:
          type: string
        location:
          type: string
        refAlt:
          type: string
        zygosity:
          type: string
        ploidyCorrCpChange:
          type: string
        lohState:
          type: string
        tumourReads:
          type: string
        RNAReads:
          type: string
        expressionRpkm:
          type: number
        foldChange:
          type: number
        TCGAPerc:
          type: integer
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    germlineSmallMutation:
      type: object
      description: A germline small mutation report
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        pog_analysis_id:
          type: integer
        biofx_assigned_id:
          type: integer
        source_version:
          type: string
        source_path:
          type: string
        exported:
          type: boolean
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    summary_patientInformation_update:
      type: object
      description: Patient details and meta information
      properties:
        physician:
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
            - Not Specified
        age:
          type: string
        caseType:
          type: string
          enum:
            - Adult
            - Pediatric
        tumourType:
          type: string
        biopsySite:
          type: string
        tumourSample:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
        comment:
          $ref: "#/components/schemas/updateComment"
    summary_tumourAnalysis:
      type: object
      description: Details about the tumour.
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        tumourContent:
          type: integer
        ploidy:
          type: string
        normalExpressionComparator:
          type: string
        diseaseExpressionComparator:
          type: string
        subtyping:
          type: string
        tcgaColor:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    summary_mutationSummary:
      type: object
      description: Details of the computed mutational signature
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        mutationSignature:
          $ref: "#/components/schemas/smallMut_signature"
        totalSNV:
          type: string
        totalIndel:
          type: string
        totalSV:
          type: string
        snvPercentileTCGA:
          type: integer
        snvPercentileDisease:
          type: string
        indelPercentileTCGA:
          type: integer
        indelPercentileDisease:
          type: string
        svPercentilePOG:
          type: integer
        snvPercentileTCGACategory:
          type: string
        snvPercentileDiseaseCategory:
          type: string
        indelPercentileTCGACategory:
          type: string
        indelPercentileDiseaseCategory:
          type: string
        svPercentilePOGCategory:
          type: string
        snvReportCategory:
          type: string
        indelReportCategory:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    summary_variantCounts:
      type: object
      description: Soon to be deprecated, this output provides static counts of variants
        identified in the report.
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        smallMutations:
          type: integer
        CNVs:
          type: integer
        SVs:
          type: integer
        expressionOutliers:
          type: integer
        variantsUnknown:
          type: integer
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    summary_genomicAlteration:
      type: object
      description: Describes an identified genomic alteration
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        geneVariant:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    summary_genomicEvents:
      type: object
      description: Genomic events with potential therapeutic targets
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        genomicEvent:
          type: string
        approvedThisCancerType:
          type: string
        approvedOtherCancerType:
          type: string
        emergingPreclinicalEvidence:
          type: string
        comments:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    summary_probeTarget:
      type: object
      description: Entries detected by rapid analysis pipeline
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        gene:
          type: string
        variant:
          type: string
        sample:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    smallMut_signature:
      type: object
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        signature:
          type: object
        pearson:
          type: number
          format: float
        nnls:
          type: number
          format: float
        associations:
          type: string
        features:
          type: string
        numCancerType:
          type: string
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    smallMut_mutation:
      type: object
      description: Detected small mutations
      properties:
        ident:
          $ref: "#/components/schemas/ident"
        dataVersion:
          $ref: "#/components/schemas/dataVersion"
        mutationType:
          type: string
        gene:
          type: string
        transcript:
          type: string
        proteinChange:
          type: string
        location:
          type: string
        refAlt:
          type: string
        zygosity:
          type: string
        ploidyCorrCpChange:
          type: string
        lohState:
          type: string
        tumourReads:
          type: string
        RNAReads:
          type: string
        expressionRpkm:
          type: number
          format: float
        foldChange:
          type: number
          format: float
        TCGAPerc:
          type: integer
        createdAt:
          $ref: "#/components/schemas/datetime"
        updatedAt:
          $ref: "#/components/schemas/datetime"
    ident:
      type: string
      format: UUIDv4
      example: 8cd64045-7e68-4455-bcc2-e750c4372974
      description: Randomly generated public unique ID
    datetime:
      type: string
      format: date-time
      example: 2017-03-30T19:04:13.354Z
      description: YYYY-MM-DDTZHH:ii:ss timestamp
    dataVersion:
      type: integer
      description: Describes which edit version this entry is. Default is 0
    POGID:
      type: string
      example: POG90
      description: BC Cancer Patient identifier
    reportIdent:
      type: string
      example: JY41T
      description: Randomly generated unique report ID
    POGRelationship:
      type: string
      enum:
        - bioinformatician
        - analyst
        - reviewer
        - admin
        - clinician
    updateComment:
      type: string
      description: A reason why this updated was made.
    ACLDenied:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
          example: You are not authorized to view this resource.
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
security:
  - basicAuth: []
