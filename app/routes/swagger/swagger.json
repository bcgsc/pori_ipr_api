{
  "openapi": "3.0.0",
  "info": {
    "description": "Designed to be consumed by the Integrated Personalized Reports (IPR) Client, the endpoints are\navailable for authorized users to consume.",
    "version": "1.0.0",
    "title": "Integrated Personalized Reports (IPR)",
    "contact": {
      "name": "IPR Team",
      "email": "ipr@bcgsc.ca"
    },
    "license": {
      "name": "Proprietary"
    }
  },
  "tags": [
    {
      "name": "Genomic Report",
      "description": "Genomic analysis report"
    },
    {
      "name": "Probe Report",
      "description": "Rapid analysis pipeline report"
    },
    {
      "name": "Report",
      "description": "Personalized Oncogenomics related object"
    },
    {
      "name": "User",
      "description": "User object"
    },
    {
      "name": "Group",
      "description": "User permissions - groups."
    },
    {
      "name": "Genomic Summary",
      "description": "Genomic Report - Summary details for a report"
    },
    {
      "name": "Germline Report",
      "description": "Routes associated with creating, reviewing, and exporting the Germline Report"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "summary": "Get all users",
        "description": "If your account has permissions, this will return all detailed user\nobject descriptions in the database.",
        "tags": [
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "For those authorized, returns all available users in the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Denied access to list of all users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ACLDenied"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Authorize new account",
        "description": "Authorize a new user to access IPR. Field 'type' should be equal 'local' or 'bcgsc'.",
        "tags": [
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/newUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been successfully added to the system",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input was provided"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Insufficient access to authorize new accounts"
          },
          "409": {
            "description": "Username is already being used"
          }
        }
      }
    },
    "/user/{user}": {
      "put": {
        "summary": "Update a user account",
        "description": "Update the user specified user details",
        "tags": [
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "User's UUID string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/newUser"
                  }
                },
                "required": [
                  "user"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User account was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Remove a single user",
        "description": "Delete a user's access to the API. This does not remove the record from\nthe dataStore the user is located in.",
        "tags": [
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "User's UUID string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user has been successfully removed"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Insufficient access to remove the user"
          },
          "404": {
            "description": "Unable to find the requested user"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "summary": "Return self",
        "description": "Return the current authenticated user",
        "tags": [
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the current authenticated self",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "No authenticated user available."
          }
        }
      }
    },
    "/user/settings": {
      "get": {
        "summary": "Return user settings",
        "description": "Return the current authenticated user's settings",
        "tags": [
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns settings for the current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "No settings available for the current authenticated user."
          }
        }
      },
      "put": {
        "summary": "Update a users settings",
        "description": "Update settings for a specific user",
        "tags": [
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "description": "The updated user settings to be stored in the database.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User settings was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/search": {
      "get": {
        "summary": "User Search",
        "description": "Provided some input query, search the user database and return results.\nQuery is search against first name, last name, email, and username.",
        "tags": [
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "String to search user database against. Wildcard matching on either\nside of string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully searched user database against the provided query.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/group": {
      "get": {
        "summary": "Get all groups",
        "description": "Return all groups currently listed in the report ACL database. This is\nnot linked or connected to the BCGSC LDAP database. Changes in one do\nnot affect the other.",
        "tags": [
          "Group",
          "User"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The API will return all available groups it has on record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/group"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "You are not authorized to view this resource"
          }
        }
      },
      "post": {
        "summary": "Create new group",
        "description": "Create a new ACL group in the Report API",
        "tags": [
          "User",
          "Group"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the new group",
                    "type": "string"
                  },
                  "owner": {
                    "description": "UUID of the owner of the new group",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "owner"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group successfully added to database",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "You are not allowed to create new group entries."
          }
        }
      }
    },
    "/user/group/{group}": {
      "get": {
        "summary": "Get a group",
        "description": "Get detailed group object from ident.",
        "tags": [
          "User",
          "Group"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Group UUID string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group found, API will return the detailed group object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "You are not authorized to view the resource"
          }
        }
      },
      "put": {
        "summary": "Update a group",
        "description": "Update the groups definition in the IPR API database",
        "tags": [
          "User",
          "Group"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Group UUID string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the new group",
                    "type": "string"
                  },
                  "owner": {
                    "description": "UUID of the owner of the new group",
                    "type": "string"
                  },
                  "required": [
                    "name",
                    "owner"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "You are not authorized to perform this action"
          },
          "404": {
            "description": "Unable to find the group"
          }
        }
      },
      "delete": {
        "summary": "Remove a group",
        "description": "Remove a group entry from the database. Doing this will immediately\nrevoke group member's access to defined resources.",
        "tags": [
          "User",
          "Group"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Group UUID string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The group was successfully removed"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "You are not authorized to perform this action"
          },
          "404": {
            "description": "Unable to find the group or user"
          }
        }
      }
    },
    "/user/group/{group}/member": {
      "get": {
        "summary": "Get group members",
        "description": "Get detailed description of all group members.",
        "tags": [
          "User",
          "Group"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Group UUID string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved all group members.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "You are not authorized to view group members"
          },
          "404": {
            "description": "Unable to find the group or user"
          }
        }
      },
      "post": {
        "summary": "Add group member",
        "description": "Add an existing user as a member to the specified group",
        "tags": [
          "User",
          "Group"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Group UUID string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "UUID ident string belonging to the user",
                    "example": "8cd64045-7e68-4455-bcc2-e750c4372974"
                  }
                },
                "required": [
                  "user"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was successfully added to the group.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "You are not authorized to perform this action"
          },
          "404": {
            "description": "Unable to find the group or user"
          }
        }
      },
      "delete": {
        "summary": "Remove group member",
        "description": "Remove an existing user from a group of which they are a member",
        "tags": [
          "User",
          "Group"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Group UUID string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "UUID ident string belonging to the user",
                    "example": "8cd64045-7e68-4455-bcc2-e750c4372974"
                  }
                },
                "required": [
                  "user"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user was successfully removed from the group."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "You are not authorized to perform this action"
          },
          "404": {
            "description": "Unable to find the group or user"
          }
        }
      }
    },
    "/reports/{report}": {
      "get": {
        "summary": "Get details of a specific report",
        "description": "Retrieve an object with details of a specific report",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found the requested report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analysis_report"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Unable to find the requested report"
          }
        }
      },
      "put": {
        "summary": "Update report",
        "description": "Update an analysis report's settings",
        "tags": [
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "settings": {
                    "description": "Fields for updating a report's settings",
                    "type": "object",
                    "properties": {
                      "state": {
                        "type": "string",
                        "enum": [
                          "ready",
                          "active",
                          "presented",
                          "archived"
                        ]
                      },
                      "reportVersion": {
                        "type": "string"
                      },
                      "kbVersion": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "settings"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analysis_report"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reports/{report}/patient-information": {
      "get": {
        "summary": "Get Patient Summary",
        "description": "Retrieve basic metadata patient details for a report",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns basic patient meta details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/patientInformation"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "Updated Patient Information",
        "description": "Updated some of the tracked patient meta details",
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "update": {
                    "$ref": "#/components/schemas/patientInformation"
                  }
                },
                "required": [
                  "update"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the update basic patient meta details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/patientInformation"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/summary/mutation-summary": {
      "get": {
        "summary": "Get Mutation Summary",
        "description": "Retrieve summary of mutation details for the report",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns summary of mutation details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mutationSummary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "Updated Mutation Summary",
        "description": "Update some of the mutation summary details",
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "update": {
                    "description": "The updated mutation summary object",
                    "type": "object",
                    "properties": {
                      "mutationSignature": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/mutationSignature"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "update"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the update basic patient meta details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mutationSummary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/summary/tumour-analysis": {
      "get": {
        "summary": "Get Tumour Analysis Summary",
        "description": "Retrieve summary of Tumour Analysis details for the report",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns summary of Tumour Analysis details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tumourAnalysis"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "Updated Tumour Analysis Summary",
        "description": "Update some of the Tumour Analysis summary details",
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "update": {
                    "description": "The updated mutation summary object",
                    "type": "object",
                    "properties": {
                      "subtyping": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "update"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns summary of Tumour Analysis details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tumourAnalysis"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/summary/variant-counts": {
      "get": {
        "summary": "Get Variant counts",
        "description": "This endpoint is soon to be deprecated. Returns static analysis of variant\ncounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns static counts of detected variants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/variantCounts"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/summary/genomic-alterations-identified": {
      "get": {
        "summary": "Get key genomic alterations",
        "description": "Retrieve list of key identified genomic alterations",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of key identified gemomic alterations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genomicAlterationsIdentified"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "post": {
        "summary": "Add key genomic alterations",
        "description": "Add new key genomic alterations to a analysis report",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns newly created key genomic alterations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/genomicAlterationsIdentified"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "User is not authorized to add key genomic alterations"
          }
        }
      }
    },
    "/reports/{report}/summary/genomic-alterations-identified/{alteration}": {
      "delete": {
        "summary": "Remove key genomic alterations",
        "description": "Remove a key identified genomic alteration entry.",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          },
          {
            "name": "alteration",
            "in": "path",
            "required": true,
            "description": "The alteration to be removed summary object",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Genomic Report",
          "Genomic Summary"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Alteration was successfully removed"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports": {
      "get": {
        "summary": "Get all analysis reports",
        "description": "Get all analysis reports that you have acess to",
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Filter the reports by 'genomic'or 'probe'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "description": "Seach for all reports under a chosen project name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "description": "String to be searched in the reports field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "states",
            "in": "query",
            "required": false,
            "description": "Filter by current state of the report",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "description": "'true' if you want to retrieve all reports. Default is set to 'false'",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "description": "Filter the reports by user role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Filter the reports by 'genomic'or 'probe'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paginated",
            "in": "query",
            "required": false,
            "description": "'true', if you want to split the report, allowing to to choose the 'limit' and 'offset",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The end of the set of reports to retrieve",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "The start of the set of reports to retrieve",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Column for the reports to be sorted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of analysis reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/analysis_report"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Insufficient access to get reports"
          }
        }
      }
    },
    "/reports/{report}/summary/microbial": {
      "get": {
        "summary": "Get microbial data",
        "description": "Get microbial data for a specific report",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
          "Microbial"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object of microbial data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project": {
      "get": {
        "summary": "Get all projects",
        "description": "Returns all projects that the user has access to",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get all projects that the user has access to",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/project"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "User doesn't have access to projects"
          }
        }
      },
      "post": {
        "summary": "Add new project",
        "description": "Add a new project to the list of projects",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A project was successfully added or successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "User isn't allowed to add a project"
          }
        }
      }
    },
    "/reports/{report}/therapeutic-targets": {
      "get": {
        "summary": "Get therapeutic targets",
        "description": "Returns all therapeutic targets for an analysis report",
        "tags": [
          "Therapeutic Targets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get therapeutic targets for analysis report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/therapeuticTarget"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Don't have permissions to get therapeutic targets"
          },
          "404": {
            "description": "Report not found"
          }
        }
      },
      "post": {
        "summary": "Create a new therapeutic target",
        "description": "Creates a new therapeutic target",
        "tags": [
          "Therapeutic Targets"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "requestBody": {
          "description": "Therapeutic Target object to be created",
          "required": true,
          "content": {
            "application/json":
            {
              "schema": {
                "$ref": "#/components/schemas/therapeuticTargetInput"
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Add therapeutic targets to analysis report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/therapeuticTarget"
                }
              }
            }
          },
          "400": {
            "description": "Input is not valid"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report not found"
          },
          "409": {
            "description": "Rank already exists"
          }
        }
      },
      "put": {
        "summary": "Update ranks of Therapeutic Targets for a report",
        "description": "Return true if the targets are updated successfully",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "requestBody": {
          "description": "An array of ranks and idents to be updated",
          "required": true,
          "content": {
            "application/json":
            {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/therapeuticTargetRanksUpdate"
                }
              }
            }
          }
        },
        "tags": [
          "Therapeutic Targets"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "True if ranks were updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updated": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Rank already exists."
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/summary/pathway-analysis": {
      "get": {
        "summary": "Get report pathway analysis",
        "description": "Get a reports pathway analysis image",
        "tags": [
          "Pathway Analysis"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a reports pathway analysis image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pathwayAnalysis"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "User doesn't have permissions to access this analysis image"
          }
        }
      },
      "put": {
        "summary": "Create/update pathway analysis image",
        "description": "Create a new pathway analysis image or update an existing pathway analysis image",
        "tags": [
          "Pathway Analysis"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the newly created/updated pathway analysis model",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pathwayAnalysis"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "User doesn't have permissions to create/update a pathway analysis image"
          }
        }
      },
      "post": {
        "summary": "Upload new pathway analysis file",
        "description": "Upload a new pathway analysis file and create new db entry",
        "tags": [
          "Pathway Analysis"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Uploads new pathway analysis image and returns new pathway analysis object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pathwayAnalysis"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "User doesn't have permissions to upload pathway analysis image"
          }
        }
      }
    },
    "/reports/{report}/small-mutations": {
      "get": {
        "summary": "Get somatic small mutations",
        "description": "Returns an analysis reports somatic small mutations",
        "tags": [
          "Mutations",
          "Small Mutations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a reports somatic small mutations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/smallMutations"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "User doesn't have permissions to access somatic small mutations"
          }
        }
      }
    },
    "/germline-small-mutation-reports": {
      "get": {
        "summary": "Get all germline small mutation reports",
        "description": "Returns all germline small mutation reports the user has access to",
        "tags": [
          "Germline Report"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "ID to search reports for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "description": "Search report for project name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The end of the set of reports to retrieve",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "The start of the set of reports to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object containing the germline reports and the number of reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "reports": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/germline_small_mutation"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "User doesn't have permissions to access germline small mutations"
          }
        }
      }
    },
    "/germline-small-mutation-reports/{report}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/germline_small_mutation"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/germline-small-mutation-reports/{report}/review": {
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/germline_small_mutation_review"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/germline-small-mutation-reports/{report}/review/{review}": {
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/review"
          },
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/germline_small_mutation_review"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/germline-small-mutation-reports/{report}/variant/{variant}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/variant"
          },
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/germline_small_mutation_variant"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/variant"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/germline_small_mutation_variant"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/graphkb/{targetType}": {
      "post": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/targetType"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/appendices": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/appendices/tcga": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/copy-variants": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/copy-variants/{cnv}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          },
          {
            "$ref": "#/components/parameters/cnv"
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/expression-variants": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/expression-variants/{ExpressionVariant}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/gene-viewer/{geneName} ": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{reports}/genes": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{reports}/genes/{geneName}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/image/expression-density-graphs": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/image/mutation-summary": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/image/retrieve/{key} ": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/image/subtype-plots": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/kb-matches": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/kb-matches/{kbMatch}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/mavis": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/mutation-signatures": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/presentation/discussion": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/presentation/discussion/{discussion}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/presentation/slide": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "post": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/presentation/slide/{slide}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/probe-results": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/probe-results/{target}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/probe-test-information": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/signatures": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/signatures/revoke/{role}": {
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/signatures/sign/{role}": {
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/small-mutations/{mutation}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/structural-variants": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/structural-variants/{structuralVariant}": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/summary/analyst-comments": {
      "get": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "",
        "description": "",
        "parameters": [
          {
            "$ref": ""
          }
        ],
        "tags": [
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      }
    },
    "/reports/{report}/therapeutic-targets/{Therapeutic Target}": {
      "get": {
        "summary": "Get a Therapeutic Target for a given ident",
        "description": "Return a single therapeutic target for an analysis report",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          },
          {
            "$ref": "#/components/parameters/therapeuticTarget"
          }
        ],
        "tags": [
          "Therapeutic Targets"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get therapeutic target for analysis report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/therapeuticTarget"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Therapeutic Target for a given ident",
        "description": "Returns 204 no content if delete was successful",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          },
          {
            "$ref": "#/components/parameters/therapeuticTarget"
          }
        ],
        "tags": [
          "Therapeutic Targets"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          }
        }
      },
      "put": {
        "summary": "Update a Therapeutic Target for a given ident",
        "description": "Return the updated therapeutic target for an analysis report",
        "parameters": [
          {
            "$ref": "#/components/parameters/report"
          },
          {
            "$ref": "#/components/parameters/therapeuticTarget"
          }
        ],
        "requestBody": {
          "description": "The parameters to be updated, any of the parameters can be removed if does not need to be updated",
          "required": true,
          "content": {
            "application/json":
            {
              "schema": {
                "$ref": "#/components/schemas/therapeuticTargetInput"
              }
            }
          }
        },
        "tags": [
          "Therapeutic Targets"
        ],
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated therapeutic target",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/therapeuticTarget"
                }
              }
            }
          },
          "400": {
            "description": "Not valid input"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Report Not found"
          },
          "409": {
            "description": "Rank already exists"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://ipr-api.bcgsc.ca/api",
      "description": "Production server (uses live data)"
    },
    {
      "url": "https://iprdev-api.bcgsc.ca/api",
      "description": "Development server"
    }
  ],
  "components": {
    "parameters": {
      "report": {
        "name": "report",
        "in": "path",
        "required": true,
        "description": "Analysis report ident",
        "schema": {
          "type": "string"
        }
      },
      "targetType": {
        "name": "Target Type",
        "in": "path",
        "required": true,
        "description": "Target type, one of: variant, therapy, evidenceLevel or context",
        "schema": {
          "type": "string"
        }
      },
      "therapeuticTarget": {
        "name": "Therapeutic Target",
        "in": "path",
        "required": true,
        "description": "Therapeutic Target ident",
        "schema": {
          "type": "string"
        }
      },
      "review": {
        "name": "review",
        "in": "path",
        "required": true,
        "description": "Germline Review ID",
        "schema": {
          "type": "string"
        }
      },
      "variant": {
        "name": "variant",
        "in": "path",
        "required": true,
        "description": "Germline Variant ID",
        "schema": {
          "type": "string"
        }
      },
      "cnv": {
        "name": "Copy-Number Variant",
        "in": "path",
        "required": true,
        "description": "Copy number variant",
        "schema": {
          "type": "string"
        }
      },
      "analysis": {
        "name": "analysis",
        "in": "path",
        "required": true,
        "description": "the analysis (or biopsy) ID",
        "schema": {
          "type": "string",
          "format": "UUIDv4"
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "ident": {
        "type": "string",
        "format": "UUIDv4",
        "example": "8cd64045-7e68-4455-bcc2-e750c4372974",
        "description": "Randomly generated public unique ID"
      },
      "datetime": {
        "type": "string",
        "format": "date-time",
        "example": "2017-03-30T19:04:13.354Z",
        "description": "YYYY-MM-DDTZHH:ii:ss timestamp"
      },
      "reportIdent": {
        "type": "string",
        "example": "JY41T",
        "description": "Randomly generated unique report ID"
      },
      "ACLDenied": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "example": "You are not authorized to view this resource."
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication information is missing or invalid",
        "headers": {
          "WWW_Authenticate": {
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ]
}